{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thomas\\\\Documents\\\\car_rental\\\\frontend\\\\car_rental\\\\src\\\\ViewVehicles.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport Grid from '@mui/material/Grid';\nimport NavBar from './Components/NavBar';\nimport Typography from '@mui/material/Typography';\nimport VehicleCard from './Components/VehicleCard';\nimport Container from '@mui/material/Container';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ViewVehicles() {\n  _s();\n  const [vehiclesInfo, setVehiclesInfo] = useState([]);\n  const {\n    role,\n    id,\n    store_id\n  } = useParams();\n  // Set a default role if 'role' is undefined\n  const resolvedRole = role || 'general';\n  const [storeData, setStoreData] = useState({\n    name: 'Loading...'\n  });\n  useEffect(() => {\n    const fetchStoreData = async () => {\n      try {\n        const response = await fetch(`http://localhost:3001/stores/get_store?store_id=${store_id}`, {\n          method: 'GET'\n          // Add headers if needed\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setStoreData(data[0]); // Store the received store data in state\n        } else {\n          // Handle error response\n        }\n      } catch (error) {\n        // Handle fetch error\n      }\n    };\n    fetchStoreData();\n  }, [store_id]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const url = new URL('http://localhost:3001/vehicles/get_all_vehicles');\n        url.searchParams.append('store_id', store_id);\n        const response = await fetch(url, {\n          method: 'GET'\n          // Add headers if needed\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok.');\n        }\n        const data = await response.json();\n        // Transform the data structure as mentioned before\n        const transformedData = data.map(vehicle => ({\n          vehicle_id: vehicle.id,\n          year: vehicle.year,\n          make: vehicle.make,\n          model: vehicle.model,\n          type: vehicle.type,\n          color: vehicle.color,\n          license_plate: vehicle.license_plate,\n          status: vehicle.status,\n          rentPerDay: vehicle.rent_per_day,\n          image: vehicle.imageUrl,\n          imageLabel: 'Vehicle Image'\n        }));\n        setVehiclesInfo(transformedData);\n      } catch (error) {\n        console.error('There was a problem fetching the data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        py: 8\n      },\n      maxWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: storeData.store_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        marginTop: 2,\n        children: vehiclesInfo.map(vehicle => /*#__PURE__*/_jsxDEV(VehicleCard, {\n          vehicle: vehicle\n        }, vehicle.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n_s(ViewVehicles, \"e7/pM+5hR3M1iAKD9FQzh66DMXs=\", false, function () {\n  return [useParams];\n});\n_c = ViewVehicles;\nexport default ViewVehicles;\nvar _c;\n$RefreshReg$(_c, \"ViewVehicles\");","map":{"version":3,"names":["React","useParams","Grid","NavBar","Typography","VehicleCard","Container","useState","useEffect","jsxDEV","_jsxDEV","ViewVehicles","_s","vehiclesInfo","setVehiclesInfo","role","id","store_id","resolvedRole","storeData","setStoreData","name","fetchStoreData","response","fetch","method","ok","data","json","error","fetchData","url","URL","searchParams","append","Error","transformedData","map","vehicle","vehicle_id","year","make","model","type","color","license_plate","status","rentPerDay","rent_per_day","image","imageUrl","imageLabel","console","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","py","maxWidth","variant","gutterBottom","store_name","container","spacing","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/thomas/Documents/car_rental/frontend/car_rental/src/ViewVehicles.js"],"sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Grid from '@mui/material/Grid';\r\nimport NavBar from './Components/NavBar';\r\nimport Typography from '@mui/material/Typography';\r\nimport VehicleCard from './Components/VehicleCard';\r\nimport Container from '@mui/material/Container';\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction ViewVehicles() {\r\n    const [vehiclesInfo, setVehiclesInfo] = useState([]);\r\n\r\n    const { role, id, store_id } = useParams();\r\n    // Set a default role if 'role' is undefined\r\n    const resolvedRole = role || 'general';\r\n\r\n    const [storeData, setStoreData] = useState({ name: 'Loading...' });\r\n    useEffect(() => {\r\n        const fetchStoreData = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:3001/stores/get_store?store_id=${store_id}`, {\r\n                    method: 'GET',\r\n                    // Add headers if needed\r\n                });\r\n\r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    \r\n                    setStoreData(data[0]); // Store the received store data in state\r\n                } else {\r\n                    // Handle error response\r\n                }\r\n            } catch (error) {\r\n                // Handle fetch error\r\n            }\r\n        };\r\n\r\n        fetchStoreData();\r\n    }, [store_id]); \r\n\r\n    useEffect(() => {\r\n\r\n        const fetchData = async () => {\r\n            try {\r\n\r\n                const url = new URL('http://localhost:3001/vehicles/get_all_vehicles');\r\n                url.searchParams.append('store_id', store_id);\r\n\r\n                const response = await fetch(url, {\r\n                    method: 'GET',\r\n                    // Add headers if needed\r\n\r\n                });\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok.');\r\n                }\r\n\r\n                const data = await response.json();\r\n                // Transform the data structure as mentioned before\r\n                const transformedData = data.map(vehicle => ({\r\n                    vehicle_id: vehicle.id,\r\n                    year: vehicle.year,\r\n                    make: vehicle.make,\r\n                    model: vehicle.model,\r\n                    type: vehicle.type,\r\n                    color: vehicle.color,\r\n                    license_plate: vehicle.license_plate,\r\n                    status: vehicle.status,\r\n                    rentPerDay: vehicle.rent_per_day,\r\n                    image: vehicle.imageUrl,\r\n                    imageLabel: 'Vehicle Image',\r\n                }));\r\n\r\n                setVehiclesInfo(transformedData);\r\n            } catch (error) {\r\n                console.error('There was a problem fetching the data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n\r\n    }, []);\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n\r\n            <Container sx={{ py: 8 }} maxWidth=\"md\">\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                {storeData.store_name}\r\n                </Typography>\r\n                <Grid container spacing={4} marginTop={2}>\r\n                    {vehiclesInfo.map((vehicle) => (\r\n                        <VehicleCard key={vehicle.id} vehicle={vehicle} />\r\n                    ))}\r\n                </Grid>\r\n\r\n\r\n            </Container>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ViewVehicles;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}